version: '3.3'

volumes:
  pg_data:
  static:
  media:
  static_frontend:

services:
  db:
    image: postgres:13.10
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data

  backend:
    # image: linorra/foodgram_backend -названия контейнеров с докерхаба
    # это для соседнего файла docker-compose.production.yml, вместо build: ./backend/
    build: ./backend/
    env_file: .env
    volumes:
      - static:/app/static_django/
      - media:/app/media/
    depends_on:
      - db

  frontend:
    # image: linorra/foodgram_frontend -названия контейнеров с докерхаба
    # это для соседнего файла docker-compose.production.yml, вместо build: 
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/:/app/result_build/

  # frontend: было в прошлом спринте
  #   env_file: .env
  #   build: ./frontend/
  #   command: cp -r /app/build/. /static/
  #   volumes:
  #     - static:/static
  
  nginx:
    image: nginx:1.19.3
    ports:
    #   # Для локального запуска localhost/admin, localhosta.
    #  - "80:80"
      # Для взрослого запуска! .
    - "8000:80"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      # Именнованные тома, которые будут доступны в backend
      # Директории в контейнере nginx, где будут лежать файлы backend.
      - static:/static_django/
      - media:/media/
      - ./frontend/build:/usr/share/nginx/html/
      - ./docs/:/usr/share/nginx/html/api/docs/

    depends_on:
      - backend

  # gateway:
  #   build: ./nginx/ или image: linorra/foodgram_gateway для 
  #   файла docker-compose.production.yml
  #   env_file: .env
  #   ports:
  #     - 9000:80
  #   volumes:
  #     - static:/static
  #     - media:/media
  # это пример последнего аналогичного блока с прошлого спринта